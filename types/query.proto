syntax = "proto3";
package irismod.nft;

import "third_party/proto/gogoproto/gogo.proto";
import "types/types.proto";

option go_package = "github.com/irismod/nft/types";

// Query provides defines the gRPC querier service
service Query {
    // Supply queries the balance of a single coin for a single account
    rpc Supply(QuerySupplyRequest) returns (QuerySupplyResponse) {}
    rpc Owner(QueryOwnerRequest) returns (QueryOwnerResponse) {}
    rpc Collection(QueryCollectionRequest) returns (QueryCollectionResponse) {}
    rpc Denom(QueryDenomRequest) returns (QueryDenomResponse) {}
    rpc Denoms(QueryDenomsRequest) returns (QueryDenomsResponse) {}
    rpc NFT(QueryNFTRequest) returns (QueryNFTResponse) {}
}

// QuerySupplyRequest is the request type for the Query/HTLC RPC method
message QuerySupplyRequest {
    // address is the address to query balances for
    string denom = 1 ;
    bytes owner = 2 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
}

// QuerySupplyResponse is the response type for the Query/Supply RPC method
message QuerySupplyResponse {
    uint64 amount = 1;
}

// QueryOwnerRequest is the request type for the Query/Owner RPC method
message QueryOwnerRequest {
    // address is the address to query balances for
    string denom = 1 ;
    bytes owner = 2 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
}

// QueryOwnerResponse is the response type for the Query/Owner RPC method
message QueryOwnerResponse {
    Owner owner = 1;
}

// QueryCollectionRequest is the request type for the Query/Collection RPC method
message QueryCollectionRequest {
    // address is the address to query balances for
    string denom = 1 ;
}

// QueryCollectionResponse is the response type for the Query/Collection RPC method
message QueryCollectionResponse {
    Collection collection = 1;
}

// QueryDenomRequest is the request type for the Query/Denom RPC method
message QueryDenomRequest {
    // address is the address to query balances for
    string denom = 1 ;
}

// QueryDenomResponse is the response type for the Query/Denom RPC method
message QueryDenomResponse {
    Denom denom = 1;
}

// QueryDenomsRequest is the request type for the Query/Denoms RPC method
message QueryDenomsRequest {}

// QueryDenomsResponse is the response type for the Query/Denoms RPC method
message QueryDenomsResponse {
    repeated Denom denoms = 1 [(gogoproto.nullable) = false];
}

// QueryNFTRequest is the request type for the Query/NFT RPC method
message QueryNFTRequest {
    // address is the address to query balances for
    string denom = 1 ;
    string token_id = 2 [(gogoproto.customname)  ="TokenID"];
}

// QueryNFTResponse is the response type for the Query/NFT RPC method
message QueryNFTResponse {
    BaseNFT nft = 1  [(gogoproto.customname)  ="NFT"];
}